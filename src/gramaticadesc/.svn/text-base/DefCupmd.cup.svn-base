import java_cup.runtime.*;

/* Terminals (Lexemas retornados por el analizador sint√°ctico). */
terminal		FECHA, HORA, EXT, PUNTODOBLE, BOOLTRUE, BOOLFALSE, DELDIR, TIPO, BOOL, OPCION, ID, INT, STRING, ALIASA;
terminal		UBICACIONABS, UBICACIONREL, FILE, COMENTARIO, RCOMMENT, OR, AND, MENOR;
terminal		MENORQUE, MAYOR, MAYORQUE, IGUALIGUAL, DIFERENTE, RPAREN, LPAREN;
terminal		PLUS, MINUS, MUL, DIVIDE, RFILE, LFILE, LCOMMENT;
terminal		LOPCIONESFILE, ROPCIONESFILE, POINT, RCLASS, LCLASS;
terminal		DESCRIPCION, DOSPUNTOS, IGUAL, SEPARADOR, RCOMMAND, LCOMMAND;
terminal		NOMBRECOMMAND, RAPP, LAPP, ARGIN, ARGOUT, RFNS, LFNS;
terminal		RINSTRUCCIONES, LINSTRUCCIONES, PUNTOYCOMA;
terminal		ELSE, IF, WHILE, UBICACIONC, OpcionesApp, NEGACION;		

/* Non terminales */
non terminal		LenguajeTotal, LenA, OpcionesA, UbicacionA, LenClases, Propiedad;
non terminal		Tripleta, LenC, LenApp, ArgumentoIN, ArgumentoOUT, Archivo, Clase;
non terminal		OpcionApp, Expresion, Conjuncion, Relacion, Adicion, Termino;
non terminal		Negacion, Factor, Literal, LenFn, Argumentos, Instrucciones;
non terminal		ListVariables, LenVar, RestoInstrucciones, Logica, Condicionales;
non terminal		Ciclos, Asignacion;

/* Precedencias */

/* PRODUCCIONES GRAMATICA MD = { */

/* LENGUAJE TOTAL */
LenguajeTotal			::=	LenA LenguajeTotal | LenClases LenguajeTotal | LenC LenguajeTotal | LenFn LenguajeTotal 
						| LenApp LenguajeTotal | COMENTARIO LenguajeTotal | LenA | LenClases | LenC | LenFn | LenApp | COMENTARIO;

/* LENGUAJE DE ARCHIVOS */
LenA				::= LFILE ALIASA POINT ALIASA OpcionesA RFILE;
OpcionesA			::= LOPCIONESFILE UbicacionA FECHA HORA ROPCIONESFILE;
UbicacionA			::= UBICACIONABS | UBICACIONREL | ;

/* LENGUAJE DE CLASES */

LenClases			::= LCLASS ALIASA DESCRIPCION COMENTARIO DESCRIPCION Propiedad RCLASS;
Propiedad			::= Tripleta Propiedad | Tripleta;
Tripleta			::= TIPO DOSPUNTOS ALIASA IGUAL Expresion SEPARADOR;

/* LENGUAJE DE SEPARADORNDOS */

LenC				::= LCOMMAND NOMBRECOMMAND IGUAL ALIASA IGUAL UBICACIONC RCOMMAND;

/* LENGUAJE DE APLICACIONES */

LenApp				::= LAPP INT ALIASA ARGIN ArgumentoIN ARGIN ARGOUT ArgumentoOUT ARGOUT OpcionApp DESCRIPCION 							COMENTARIO DESCRIPCION RAPP;
ArgumentoIN			::= Archivo | Clase | Archivo ArgumentoIN | Clase ArgumentoIN;
ArgumentoOUT			::= Archivo | Clase;
Archivo 			::= FILE;
Clase				::= ALIASA;
OpcionApp			::= OPCION | OPCION OpcionesApp;

/* LENGUAJE DE EXPRESIONES */

Expresion			::= Conjuncion | Expresion OR Conjuncion;
Conjuncion			::= Relacion | Conjuncion AND Relacion;
Relacion			::= Adicion | Relacion MENOR Adicion 
						| Relacion MENORQUE Adicion | Relacion MAYOR Adicion 
						| Relacion MAYORQUE Adicion | Relacion IGUALIGUAL Adicion
						| Relacion DIFERENTE Adicion;
Adicion				::= Termino | Adicion PLUS Termino | Adicion MINUS Termino;
Termino				::= Negacion | Termino MUL Negacion | Termino DIVIDE Negacion;
Negacion			::= Factor | NEGACION Factor;
Factor				::=  ID | Propiedad | Literal | LPAREN Expresion RPAREN;
Literal				::= INT | BOOL | FECHA | HORA | FILE | ALIASA | STRING;

/* LENGUAJE DE FUNCIONES */

LenFn				::= LFNS TIPO ALIASA LPAREN Argumentos RPAREN LINSTRUCCIONES Instrucciones RINSTRUCCIONES RFNS;
Argumentos			::= TIPO ALIASA | TIPO ALIASA SEPARADOR Argumentos;
Instrucciones			::= ListVariables RestoInstrucciones | ;
ListVariables			::= LenVar | LenVar ListVariables;
LenVar				::= TIPO ALIASA PUNTOYCOMA;
RestoInstrucciones		::= Logica | Logica RestoInstrucciones;
Logica				::= Condicionales | Ciclos | Asignacion;
Condicionales			::= IF LPAREN Expresion RPAREN LINSTRUCCIONES Logica RINSTRUCCIONES
						| IF LPAREN Expresion RPAREN LINSTRUCCIONES Logica RINSTRUCCIONES ELSE LINSTRUCCIONES Logica RINSTRUCCIONES;
Ciclos				::= WHILE LPAREN Expresion RPAREN LINSTRUCCIONES Logica RINSTRUCCIONES;
Asignacion			::= ALIASA IGUAL Expresion PUNTOYCOMA;

/* FIN PRODUCCIONES GRAMATICA MD */
